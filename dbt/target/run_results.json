{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.5", "generated_at": "2024-09-02T10:41:46.566276Z", "invocation_id": "5156a96e-d00c-4b76-933d-e113785f73f8", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:39.168237Z", "completed_at": "2024-09-02T10:41:39.207329Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:39.221662Z", "completed_at": "2024-09-02T10:41:44.307727Z"}], "thread_id": "Thread-1", "execution_time": 5.162268161773682, "adapter_response": {"_message": "SUCCESS", "rows_affected": 0}, "message": "SUCCESS", "failures": null, "unique_id": "model.payrolldb.dim_agency", "compiled": true, "compiled_code": "WITH transformed AS (\n    SELECT DISTINCT\n        -- Directly cast and transform the source data\n        AgencyID::INT AS AgencyID,\n        INITCAP(AgencyName) AS AgencyName,\n        COALESCE(AgencyStartDate::DATE, '1900-01-01') AS AgencyStartDate\n    FROM \"payrolldb\".\"stg\".\"staging_dim_agency\"\n)\n\nSELECT\n    AgencyID,\n    AgencyName,\n    AgencyStartDate\nFROM transformed\n\n\n    WHERE NOT EXISTS (\n        SELECT 1\n        FROM \"payrolldb\".\"edw_edw\".\"dim_agency\"\n        WHERE AgencyID = transformed.AgencyID\n    )\n", "relation_name": "\"payrolldb\".\"edw_edw\".\"dim_agency\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:39.188103Z", "completed_at": "2024-09-02T10:41:39.220466Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:39.280712Z", "completed_at": "2024-09-02T10:41:44.314511Z"}], "thread_id": "Thread-2", "execution_time": 5.1775548458099365, "adapter_response": {"_message": "SUCCESS", "rows_affected": 0}, "message": "SUCCESS", "failures": null, "unique_id": "model.payrolldb.dim_employee", "compiled": true, "compiled_code": "-- models/warehouse/dim_employee.sql\n\nWITH cleaned AS (\n    SELECT\n        -- Initial cleaning and transformation\n        DISTINCT\n        EmployeeID::INT AS EmployeeID,\n        INITCAP(FirstName) AS FirstName,\n        INITCAP(LastName) AS LastName,\n        COALESCE(LeaveStatusasofJune30, '')::VARCHAR(10) AS LeaveStatusasofJune30\n    FROM \"payrolldb\".\"stg\".\"staging_dim_employee\"\n)\n\nSELECT\n    EmployeeID,\n    FirstName,\n    LastName,\n    LeaveStatusasofJune30\nFROM cleaned\n\n\n    WHERE EmployeeID NOT IN (SELECT EmployeeID FROM \"payrolldb\".\"edw_edw\".\"dim_employee\")\n", "relation_name": "\"payrolldb\".\"edw_edw\".\"dim_employee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:39.197052Z", "completed_at": "2024-09-02T10:41:39.248445Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:39.344843Z", "completed_at": "2024-09-02T10:41:44.330341Z"}], "thread_id": "Thread-3", "execution_time": 5.179853916168213, "adapter_response": {"_message": "SUCCESS", "rows_affected": 0}, "message": "SUCCESS", "failures": null, "unique_id": "model.payrolldb.dim_title", "compiled": true, "compiled_code": "-- models/warehouse/dim_title.sql\n\nWITH cleaned AS (\n    SELECT DISTINCT\n        TitleCode::INT AS TitleCode,\n        COALESCE(TitleDescription, '')::TEXT AS TitleDescription\n    FROM \"payrolldb\".\"stg\".\"staging_dim_title\"\n)\n\nSELECT\n    TitleCode,\n    TitleDescription\nFROM cleaned\n\n\n    WHERE TitleCode NOT IN (SELECT TitleCode FROM \"payrolldb\".\"edw_edw\".\"dim_title\")\n", "relation_name": "\"payrolldb\".\"edw_edw\".\"dim_title\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:39.208486Z", "completed_at": "2024-09-02T10:41:39.274039Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:39.428427Z", "completed_at": "2024-09-02T10:41:44.336229Z"}], "thread_id": "Thread-4", "execution_time": 5.160343647003174, "adapter_response": {"_message": "SUCCESS", "rows_affected": 930}, "message": "SUCCESS", "failures": null, "unique_id": "model.payrolldb.fact_payroll", "compiled": true, "compiled_code": "WITH cleaned AS (\n    SELECT DISTINCT\n        -- Generate a pseudo-UUID as a VARCHAR\n        md5(random()::text || getdate()::text) AS PayrollID,  -- Using MD5 hash as UUID substitute\n        PayrollNumber::INT AS PayrollNumber,\n        EmployeeID::INT AS EmployeeID,\n        AgencyID::INT AS AgencyID,\n        TitleCode::INT AS TitleCode,\n        FiscalYear::INT AS FiscalYear,\n        BaseSalary::DECIMAL(10, 2) AS BaseSalary,\n        RegularHours::DECIMAL(10, 2) AS RegularHours,\n        RegularGrossPaid::DECIMAL(10, 2) AS RegularGrossPaid,\n        OTHours::DECIMAL(10, 2) AS OTHours,\n        TotalOTPaid::DECIMAL(10, 2) AS TotalOTPaid,\n        TotalOtherPay::DECIMAL(10, 2) AS TotalOtherPay,\n        WorkLocationBorough::VARCHAR(20) AS WorkLocationBorough\n    FROM \"payrolldb\".\"stg\".\"staging_fact_payroll\"\n    WHERE PayrollNumber IS NOT NULL  -- Filter out rows where essential fields are null\n),\n\nfiscal_year_lookup AS (\n    SELECT DateID, FiscalYear\n    FROM \"payrolldb\".\"edw\".\"dim_date\"\n)\n\nSELECT DISTINCT\n    c.PayrollID,\n    c.PayrollNumber,\n    c.EmployeeID,\n    c.AgencyID,\n    c.TitleCode,\n    fy.DateID AS DateID,\n    c.BaseSalary,\n    c.RegularHours,\n    c.RegularGrossPaid,\n    c.OTHours,\n    c.TotalOTPaid,\n    c.TotalOtherPay,\n    c.WorkLocationBorough\nFROM cleaned c\nLEFT JOIN fiscal_year_lookup fy\n    ON c.FiscalYear = fy.FiscalYear\n\n\n    WHERE NOT EXISTS (\n        SELECT 1\n        FROM \"payrolldb\".\"edw_edw\".\"fact_payroll\" AS existing\n        WHERE existing.PayrollID = c.PayrollID\n    )\n", "relation_name": "\"payrolldb\".\"edw_edw\".\"fact_payroll\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:44.397283Z", "completed_at": "2024-09-02T10:41:44.409933Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:44.429142Z", "completed_at": "2024-09-02T10:41:46.129752Z"}], "thread_id": "Thread-2", "execution_time": 1.7569868564605713, "adapter_response": {}, "message": "Database Error in model overtime_by_employee_and_agency (models/marts/overtime_by_employee_and_agency.sql)\n  syntax error at or near \"(\" in context \"(\n                  DBT_INTERNAL_SOURCE.(\", at line 17, column 37\n  compiled Code at target/run/payrolldb/models/marts/overtime_by_employee_and_agency.sql", "failures": null, "unique_id": "model.payrolldb.overtime_by_employee_and_agency", "compiled": true, "compiled_code": "WITH source_data AS (\n    SELECT\n        EmployeeID,\n        AgencyID,\n        TitleCode,\n        SUM(OTHours) AS TotalOTHours,\n        SUM(TotalOTPaid) AS TotalOTPaid\n    FROM\n        \"payrolldb\".\"edw_edw\".\"fact_payroll\"\n    GROUP BY\n        EmployeeID, AgencyID, TitleCode\n)\n\nSELECT\n    EmployeeID,\n    AgencyID,\n    TitleCode,\n    TotalOTHours,\n    TotalOTPaid\nFROM source_data", "relation_name": "\"payrolldb\".\"edw_marts\".\"overtime_by_employee_and_agency\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-09-02T10:41:44.384635Z", "completed_at": "2024-09-02T10:41:44.408774Z"}, {"name": "execute", "started_at": "2024-09-02T10:41:44.411053Z", "completed_at": "2024-09-02T10:41:46.142585Z"}], "thread_id": "Thread-1", "execution_time": 1.7719109058380127, "adapter_response": {}, "message": "Database Error in model payroll_aggregate_by_agency (models/marts/payroll_aggregate_by_agency.sql)\n  syntax error at or near \"(\" in context \"(\n                  DBT_INTERNAL_SOURCE.(\", at line 17, column 37\n  compiled Code at target/run/payrolldb/models/marts/payroll_aggregate_by_agency.sql", "failures": null, "unique_id": "model.payrolldb.payroll_aggregate_by_agency", "compiled": true, "compiled_code": "WITH source_data AS (\n    SELECT\n        a.AgencyID,\n        a.AgencyName,\n        f.FiscalYear,\n        SUM(f.BaseSalary) AS TotalBaseSalary,\n        SUM(f.RegularGrossPaid) AS TotalRegularGrossPaid,\n        SUM(f.OTHours) AS TotalOTHours,\n        SUM(f.TotalOTPaid) AS TotalOTPaid,\n        SUM(f.TotalOtherPay) AS TotalOtherPay,\n        SUM(f.TotalOTPaid + f.TotalOtherPay) AS TotalSupplementalPay,\n        COUNT(DISTINCT f.EmployeeID) AS TotalEmployees\n    FROM\n        \"payrolldb\".\"stg\".\"staging_fact_payroll\" f  -- Aggregating directly from the source\n    JOIN\n        \"payrolldb\".\"stg\".\"staging_dim_agency\" a\n    ON\n        f.AgencyID = a.AgencyID\n    GROUP BY\n        a.AgencyID, a.AgencyName, f.FiscalYear\n)\n\nSELECT\n    AgencyID,\n    AgencyName,\n    FiscalYear,\n    TotalBaseSalary,\n    TotalRegularGrossPaid,\n    TotalOTHours,\n    TotalOTPaid,\n    TotalOtherPay,\n    TotalSupplementalPay,\n    TotalEmployees\nFROM source_data", "relation_name": "\"payrolldb\".\"edw_marts\".\"payroll_aggregate_by_agency\""}], "elapsed_time": 10.417222261428833, "args": {"introspect": true, "source_freshness_run_project_hooks": false, "print": true, "exclude": [], "static_parser": true, "log_format_file": "debug", "invocation_command": "dbt run", "which": "run", "log_level_file": "debug", "use_colors_file": true, "macro_debugging": false, "defer": false, "log_path": "/Users/villy/PycharmProjects/Payroll-Data-Integration-Platform/dbt/logs", "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "version_check": true, "send_anonymous_usage_stats": true, "use_colors": true, "enable_legacy_logger": false, "warn_error_options": {"include": [], "exclude": []}, "empty": false, "printer_width": 80, "quiet": false, "project_dir": "/Users/villy/PycharmProjects/Payroll-Data-Integration-Platform/dbt", "strict_mode": false, "profiles_dir": "/Users/villy/PycharmProjects/Payroll-Data-Integration-Platform/dbt", "indirect_selection": "eager", "partial_parse": true, "show_resource_report": false, "cache_selected_only": false, "populate_cache": true, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "write_json": true, "log_level": "info", "select": [], "require_resource_names_without_spaces": false, "log_format": "default", "favor_state": false}}